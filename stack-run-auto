#!/bin/bash
function errcho {
  >&2 echo $@
}

function package_for_module {
  errcho "Finding package for $1..."
  package=$(./module-package $1)
  errcho "----> $package"
  echo $package
}

function dependencies_for_package {
  errcho "Finding dependencies for $1..."
  if [ $1 = "base" ]; then
    return
  fi

  deps=$(echo $1; ./hackage-dependencies $1)
  errcho "----> $deps"
  echo $deps
}

errcho "Parsing modules..."
modules=`./file-modules $1`
packages=`for module in $modules; do package_for_module $module; done | sort | uniq`
all_packages=`for package in $packages; do dependencies_for_package $package; done`
arg_list=`for package in $all_packages; do echo "--package $package"; done | sort | uniq`
stack runghc $1 $arg_list
